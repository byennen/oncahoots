= content_for :header do
  .span3
    = link_to "javascript:void(0);", class: 'mono mn' do
      = image_tag @user.profile.image.xxlarge
  .span8
    .carus
      .pro-user
        %p Hi! My name #{@user.full_name} and i'm a user interface designer from chicago, IL. Let's connect!
    - if current_user.relatable?(@user) 
      %a{href: "#add-contact", class: "btn btn-primary", data: {toggle: "modal"}, style: "margin-right: 10px;"} Add Contact
            
  .clearfix
.clearfix
- if can_view?(current_user, @user)
  .row-fluid
    .container
      .offset2.span10
        %ul.tabs5
          %li
            %a{href: "#tab1"}Contacts
          - if @user == current_user
            %li
              %a{href: "#tab2"}
                Requests
                - if @requests.size > 0
                  %i= @requests.size
            %li
              %a{href: "#tab3"}
                Notifications
            %li
              %a{href: "#tab4"}
                Messages
                - if @unread_messages.size > 0
                  %i#unread_messages=  @unread_messages.size
        .clearfix
        .tab_container
          #tab1.tab_content
            - if @contacts.blank?
              %br
              %br
              .span11.top2
                %center
                  %h4 No contact
            - else
              %button.btn.btn2.mod1
                %i= image_tag "search-icon.png"
              = text_field_tag :term, "", class: "field mod2"
              .clearfix
              .list_carousel
                %ul#foo2.sss
                  - @contacts.each do |contact|
                    %li
                      .users
                        %a{href: user_path(contact.relation)}= image_tag (contact.relation.profile.image.xlarge)
                        .hovers
                          %p Hi! I am another user from chicago and i am excited about business
                          = link_to contact.relation.full_name, user_path(contact.relation)
                %a#prev2.prev{href: "#"}
                %a#next2.next{href: "#"}
              %center
                %button.btn.btn3 See all &nbsp;&nbsp;&nbsp;&nbsp; >
          - if @user == current_user
            = render partial: "private_tabs"
  .clearfix
  %br
  %br
  .row-fluid
    .container
      .offset2.span10
        %ul.tabs6
          %li
            %a{href: "#tab11"} Education &amp; Skills
          %li
            %a{href: "#tab22"} Experience
          %li
            %a{href: "#tab33"} Portfolio
          %li
            %a{href: "#tab44"} FAQs
        .clearfix
        .tab_container
          #tab11.tab_content2
            .two-col
              %h3 Education
              %p= @profile.education
            .two-col
              %h3 Skills &amp; Interests
              %p= @profile.skills
          #tab22.tab_content2
            %ul.posts.po2
              - @experiences.each do |experience|
                %li
                  %a.avatr{href: "javascript:;"}
                  %h4 
                    = experience.company_name
                    %br
                    %span= experience.position_name
                  %p = experience_string(experience)
                  .clearfix           
          #tab33.tab_content2
            .profile
              %a.gb{href: "javascript:;"}
              %ul.ssap
                %li
                  %a{href: "javascript:;"}
                %li
                  %a{href: "javascript:;"}
                %li
                  %a{href: "javascript:;"}
              %h3
                Project name
                %br
                %span Project organization name
              %p As a communication intern I was responsible for producing the following pamphlets explaining our processes to clients.
          #tab44.tab_content2
            .faq
              %h2 FAQ
              .half
                %p
                  %b= "- What do you look for in a new hire?"
                  %br
                  People with passion and experience.
                  %br
                  %br
                  %b= "- What do you do on a daily basis?"
                  %br
                  Meet withy clients.
                  %br
                  %br
                  %b= "- How many hours a week do you work?"
                  %br
                  Between 45 and 60.
              .half
                %p
                  %b= "- What do you look for in a new hire?"
                  %br
                  People with passion and experience.
                  %br
                  %br
                  %b= "- What do you do on a daily basis?"
                  %br
                  Meet withy clients.
                  %br
                  %br
                  %b= "- How many hours a week do you work?"
                  %br
                  Between 45 and 60.
.clearfix

.row-fluid
  .container
    .span12
      .seperator
.clearfix

#add-contact.modal.hide
  = simple_form_for Relationship.new(user_id: current_user.id) do |f|
    .modal-header
      %button{type: "button", class: "close", data: {dismiss: "modal"}} &times;
      %h3 Add Contact
    .modal-body
      = f.input :relation_id, as: :hidden, input_html: {value: @user.id}
      = f.input :message, as: :text, input_html: {class: 'span5', rows: 10}
    .modal-footer
      = f.submit "Add Contact", class: "btn btn-primary"

#message-form.modal.hide.fade{tabindex: "-1", role: "dialog", :"aria-labelledby" => "myModalLabel", :"aria-hidden" => "true", style: "top: 500px"}

  .modal-header
    %button{type: "button", class: "close", data: {dismiss: "modal"}} &times;
    %h3 New Message
  = simple_form_for Message.new do |f|
    .modal-body
      = f.input :recipients, input_html: {class: "tagauto tags", value: ""}
      = f.input :subject
      = f.text_area :body, rows: 10, style: "width: 100%"
    .modal-footer
      = f.button :submit, 'Send message'


:javascript
  
  $(function () {
    $(".tab_content").hide(); //Hide all content
    $("ul.tabs5 li:first").addClass("active").show(); //Activate first tab
    $(".tab_content:first").show(); //Show first tab content
      
    //On Click Event
    $("ul.tabs5 li").click(function() {
      $("ul.tabs5 li").removeClass("active"); //Remove any "active" class
      $("ul.tabs5 a").removeClass("selected");
      $(this).addClass("active"); //Add "active" class to selected tab
      jQuery(this).children("a").addClass('selected');
      //console.log($(this).toSource());
      $(".tab_content").hide(); //Hide all tab content
      var activeTab = $(this).find("a").attr("href"); //Find the rel attribute value to identify the active tab + content
      $(activeTab).fadeIn(); //Fade in the active content
      return false;
    });
    $(".tab_content2").hide(); //Hide all content
    $("ul.tabs6 li:first").addClass("active").show(); //Activate first tab
    $(".tab_content2:first").show(); //Show first tab content
      
      //On Click Event
    $("ul.tabs6 li").click(function() {
      $("ul.tabs6 li").removeClass("active"); //Remove any "active" class
      $("ul.tabs6 a").removeClass("selected");
      $(this).addClass("active"); //Add "active" class to selected tab
      jQuery(this).children("a").addClass('selected');
      //console.log($(this).toSource());
      $(".tab_content2").hide(); //Hide all tab content
      var activeTab = $(this).find("a").attr("href"); //Find the rel attribute value to identify the active tab + content
      $(activeTab).fadeIn(); //Fade in the active content
      return false;
    });
  
  });
  // Iterate over each select element
  $('select.select').each(function() {

    // Cache the number of options
    var $this = $(this),
    numberOfOptions = $(this).children('option').length;

    // Hides the select element
    $this.addClass('s-hidden');

    // Wrap the select element in a div
    $this.wrap('<div class="select"></div>');

    // Insert a styled div to sit over the top of the hidden select element
    $this.after('<div class="styledSelect"></div>');

    // Cache the styled div
    var $styledSelect = $this.next('div.styledSelect');

    // Show the first select option in the styled div
    $styledSelect.text($this.children('option').eq(0).text());

    // Insert an unordered list after the styled div and also cache the list
    var $list = $('<ul />', {
      'class': 'options'
    }).insertAfter($styledSelect);

    // Insert a list item into the unordered list for each select option
    for (var i = 0; i < numberOfOptions; i++) {
      $('<li />', {
        text: $this.children('option').eq(i).text(),
        rel: $this.children('option').eq(i).val()
      }).appendTo($list);
    }

    // Cache the list items
    var $listItems = $list.children('li');

    // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)
    $styledSelect.click(function(e) {
      e.stopPropagation();
      $('div.styledSelect.active').each(function() {
        $(this).removeClass('active').next('ul.options').hide();
      });
      $(this).toggleClass('active').next('ul.options').toggle();
    });

    // Hides the unordered list when a list item is clicked and updates the styled div to show the selected list item
    // Updates the select element to have the value of the equivalent option
    $listItems.click(function(e) {
      e.stopPropagation();
      $styledSelect.text($(this).text()).removeClass('active');
      $this.val($(this).attr('rel'));
      $list.hide();
      /* alert($this.val()); Uncomment this for demonstration! */
    });

    // Hides the unordered list when clicking outside of it
    $(document).click(function() {
      $styledSelect.removeClass('active');
      $list.hide();
    });

    
  });
